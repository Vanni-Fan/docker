# docker build -f build-phalcon-dockerfile -t registry.cn-hangzhou.aliyuncs.com/vanni/phalcon:7.4-apache ..

FROM php:7.4-apache
ENV DOCUMENT_ROOT=/var/www/pa
ARG WITH_MYSQL=yes
ARG WITH_REDIS=yes
ARG WITH_PA_PASSWORD=yes
ARG PA_PASSWORD=no
ARG WITH_ALI_SOURCE=yes
ARG WITH_COMPOSER=yes
ARG WITH_GD=yes

# 复制加速文件
COPY ./docker/sources.list ./docker/github.hosts ./docker/cache/* /tmp/

# 加速选项
RUN if [ "$WITH_ALI_SOURCE" = yes ]; then \
    cp /tmp/sources.list /etc/apt/sources.list && cat /tmp/github.hosts >> /etc/hosts; \
fi

# 安装一些基础组件
RUN apt-get update && apt-get install -y unzip wget

# 激活扩展
RUN ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load


# 安装PHP扩
## 解压源码
RUN docker-php-source extract \
    && if [ "$WITH_MYSQL" = yes ];then docker-php-ext-install pdo_mysql; fi \
    && if [ "$WITH_GD" = yes ]; then( \
        if [ ! -f /tmp/zlib-1.2.11.tar.xz ];then (\
            wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.xz -O /tmp/zlib-1.2.11.tar.xz \
        )fi\
        && tar xf /tmp/zlib-1.2.11.tar.xz -C /tmp && /tmp/zlib-1.2.11/configure && make && make install \
        && apt-get install -y libpng-dev libjpeg-dev libxpm-dev libfreetype6-dev \
        && docker-php-ext-configure gd --with-jpeg --with-freetype --with-xpm --enable-gd-jis-conv \
        && docker-php-ext-install gd && docker-php-ext-enable gd \
    ) fi \
    && docker-php-source delete \
    && rm -rf /var/lib/apt/lists/*


# 安装COMPOSER
RUN if [ "$WITH_COMPOSER" = "yes" ]; then ( \
   ( \
      if [ -f /tmp/composer.phar ]; then cp /tmp/composer.phar /usr/bin/composer; \
      else wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://getcomposer.org/composer-stable.phar -O /usr/bin/composer;\
      fi \
   ) \
   && chmod +x /usr/bin/composer \
) fi


## Install PSR
RUN ( \
      if [ -f /tmp/php-psr-master.tar.gz ]; then tar xzf /tmp/php-psr-master.tar.gz; \
      else wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://github.com/jbboehr/php-psr/archive/master.tar.gz -O - | tar xz; \
      fi \
    ) \
    && cd php-psr-master \
    && phpize \
    && ./configure \
    && make \
    && make install \
    && cd ../ \
    && docker-php-ext-enable --ini-name 0-psr.ini psr \
    && rm -rf php-psr-master /tmp/php-psr-master.tar.gz

## Install Phalcon
RUN ( \
      if [ -f /tmp/cphalcon-master.tar.gz ]; then tar xzf /tmp/cphalcon-master.tar.gz; \
      else wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://github.com/phalcon/cphalcon/archive/master.tar.gz -O - | tar xz; \
      fi \
    ) \
    && cd cphalcon-master \
    && cd build \
    && ./install \
    && cd ../.. \
    && docker-php-ext-enable phalcon \
    && rm -rf cphalcon-master /tmp/cphalcon-master.tar.gz


## Install Redis
RUN if [ "$WITH_REDIS" = "yes" ]; then ( \
   ( \
      if [ -f /tmp/phpredis-master.tar.gz ]; then tar xzf /tmp/phpredis-master.tar.gz; \
      else wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://github.com/phpredis/phpredis/archive/master.tar.gz -O - | tar xz;\
      fi \
   ) \
   && cd phpredis-master \
   && phpize \
   && ./configure \
   && make \
   && make install \
   && docker-php-ext-enable redis \
   && cd .. \
   && rm -rf phpredis-master /tmp/phpredis-master.tar.gz \
) fi


## Install Password plugins
### Install Zephir parser
RUN if [ "$WITH_PA_PASSWORD" = "yes" ]; then ( \
    ( \
       if [ -f /tmp/php-zephir-parser-master.tar.gz ]; then tar xzf /tmp/php-zephir-parser-master.tar.gz; \
       else wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://github.com/phalcon/php-zephir-parser/archive/master.tar.gz -O - | tar xz; \
       fi \
    ) \
    && cd php-zephir-parser-master \
    && phpize \
    && ./configure \
    && make \
    && make install \
    && docker-php-ext-enable zephir_parser \
    && cd .. \
    && rm -rf php-zephir-parser-master /tmp/php-zephir-parser-master.tar.gz \
) fi

### Install zephir.phar
RUN if [ "$WITH_PA_PASSWORD" = "yes" ]; then ( \
    if [ -f /tmp/zephir ]; then cp /tmp/zephir /usr/local/bin/zephir; \
    else ( \
      ZEPHIR_VERSION=`wget -t 5 --dns-timeout=3 --connect-timeout=3 -q 'https://api.github.com/repos/phalcon/zephir/releases?page=1&per_page=1' -O -|grep '"tag_name":'|awk -F '"' '{print $4}'` \
      && wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://github.com/phalcon/zephir/releases/download/${ZEPHIR_VERSION}/zephir.phar -O /usr/local/bin/zephir \
    ) fi \
    && chmod +x /usr/local/bin/zephir && rm -rf /tmp/zephir \
) fi

### Install Password plugins
RUN if [ "$WITH_PA_PASSWORD" = "yes" ]; then ( \
    ( \
       if [ -f /tmp/pa.zip ]; then cp /tmp/pa.zip .; \
       else wget -t 5 --dns-timeout=3 --connect-timeout=3 -q https://github.com/Vanni-Fan/password/archive/master.zip -O pa.zip; \
       fi \
    ) \
    && unzip pa.zip \
    && cd password-master \
    && if [ "$PA_PASSWORD" = "no" ]; then PA_PASSWORD=`date +%l%M%S%H`; fi \
    && echo $PA_PASSWORD > /tmp/pa_password \
    && echo YOUR PA_PASSWORD IS [$PA_PASSWORD], YOU CAN VIEW IT IN /tmp/pa_password FILE. >&2 \
    && php install.php $PA_PASSWORD \
    && cp ./ext/modules/hp.so `php -i|grep extension_dir|head -n 1|awk '{print $3}'` \
    && docker-php-ext-enable hp \
    && cd .. \
    && rm -rf password-master pa.zip /tmp/pa.zip \
) fi




# 复制源文件
COPY ./controllers /var/www/pa/controllers
COPY --chown=www-data:www-data ./data /var/www/pa/data
COPY ./library /var/www/pa/library
COPY ./models /var/www/pa/models
COPY --chown=www-data:www-data ./plugins /var/www/pa/plugins
COPY --chown=www-data:www-data ./public /var/www/pa/public
COPY ./views /var/www/pa/views

# 复制配置文件
COPY ./docker/sites-enabled/0-default.conf /etc/apache2/sites-enabled/0-default.conf
